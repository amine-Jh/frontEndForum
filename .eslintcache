[{"C:\\Users\\amine\\Desktop\\JAVAPROJECT\\forum\\src\\index.js":"1","C:\\Users\\amine\\Desktop\\JAVAPROJECT\\forum\\src\\App.js":"2","C:\\Users\\amine\\Desktop\\JAVAPROJECT\\forum\\src\\reportWebVitals.js":"3","C:\\Users\\amine\\Desktop\\JAVAPROJECT\\forum\\src\\component\\Login.js":"4","C:\\Users\\amine\\Desktop\\JAVAPROJECT\\forum\\src\\services\\auth.service.js":"5","C:\\Users\\amine\\Desktop\\JAVAPROJECT\\forum\\src\\services\\auth-header.js":"6"},{"size":548,"mtime":1609873014590,"results":"7","hashOfConfig":"8"},{"size":161,"mtime":1609872162044,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":2600,"mtime":1609897569774,"results":"11","hashOfConfig":"8"},{"size":842,"mtime":1609900605658,"results":"12","hashOfConfig":"8"},{"size":246,"mtime":1609727405279,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"pv58st",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\amine\\Desktop\\JAVAPROJECT\\forum\\src\\index.js",[],["29","30"],"C:\\Users\\amine\\Desktop\\JAVAPROJECT\\forum\\src\\App.js",[],"C:\\Users\\amine\\Desktop\\JAVAPROJECT\\forum\\src\\reportWebVitals.js",[],"C:\\Users\\amine\\Desktop\\JAVAPROJECT\\forum\\src\\component\\Login.js",["31","32","33"],"import React, { useState} from 'react'\r\n\r\nimport { useHistory } from \"react-router\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from 'react-validation/build/input';\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport {isEmail} from \"validator\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport \"./css/Login.css\"\r\nimport   svg  from \"./images/loginhome.svg\"\r\n\r\n\r\n\r\n\r\n\r\n\r\n    \r\nconst Login = (props) => {\r\n  const [emailvalue,setEmail]=useState(\"\");\r\n   const [password,setPassword]=useState(\"\");\r\n   const [message,setMessage]=useState(\"hello\");\r\n   const [loading,setLoading]=useState(false);\r\n   let history=useHistory()\r\n   // handle login submit\r\n   const handleLogin=(e)=>{\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    \r\n   console.log(\"okey\")\r\n   AuthService.login(emailvalue,password).then( ()=>{\r\n    history.push(\"/home\")\r\n    window.location.reload();\r\n   }) \r\n  }\r\n\r\n\r\n   console.log(\"loading\",loading);\r\n   console.log(\"password\",password);\r\n   console.log(\"username\",emailvalue);\r\n   console.log(\"message\",message);\r\n\r\n   const required = value => {\r\n    if (!value) {\r\n      return (\r\n        <div className=\"alert\" role=\"alert\"> ce champ est obligatoire\r\n         </div>);\r\n    }\r\n  };\r\n  const email = (value) => {\r\n    if (!isEmail(value)) {\r\n      return (\r\n        <div className=\"alert\" role=\"alert\">\r\n          entrer un email\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    <div  className=\"login\" >\r\n      <header> \r\n        <div className=\"left__header\">\r\n          ENSAKFORUM\r\n        </div>\r\n        <div className=\"right__header\">\r\n          <ul>\r\n            <li> <a href=\"#\">S'inscrire</a>  </li>\r\n            <li  className=\"login__buton\" > <a href=\"#\">Se connecter</a>  </li>\r\n          </ul>\r\n        </div>\r\n      </header>\r\n      \r\n      <div  className=\"login__body\" >\r\n        <div className=\"login__container\">\r\n        <img src={svg} alt=\"svg\"/>\r\n\r\n      <Form  className=\"login__form\" onSubmit={ e=>handleLogin(e)}>\r\n      <h1 className=\"title\" >  Connexion </h1>\r\n     \r\n      <Input className=\"input\"  placeholder=\"Email\" type=\"text\" name=\"email\" value={emailvalue} onChange={e=>setEmail(e.target.value)} validations={[required,email]} />\r\n      <Input  className=\"password\" placeholder=\"mot de passe\" type=\"password\" name=\"password\" value={password} onChange={e=>setPassword(e.target.value)} validations={[required]}  />\r\n     <br/>\r\n     <CheckButton  className=\"button\" > Se connecter</CheckButton>\r\n    </Form>\r\n\r\n      </div>\r\n      </div>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","C:\\Users\\amine\\Desktop\\JAVAPROJECT\\forum\\src\\services\\auth.service.js",["34","35"],"import axios from \"axios\";\r\nconst URL=\"http://localhost:8080/api/auth/\";\r\n\r\nclass AuthService {\r\n    //first method for login request\r\n    login(email, password){\r\n\r\n    const resp= axios.post(URL+\"signin\",{email,password})\r\n        .then(  response=> {  if(response.data.accessToken){\r\n            localStorage.setItem(\"user\",JSON.stringify(response.data));}\r\n     return response.data\r\n    });\r\n    return resp;\r\n    \r\n}\r\n\r\nsignupStuent(name,prenom,telephone,email,annee,filliere,username)\r\n{\r\n  const resp= axios.post(URL+\"signupStudent\",{email,password,name,annee,filliere,username,telephone})\r\n  .then(  response=> {  \r\nreturn response.data\r\n});\r\n\r\n}\r\n\r\n\r\nlogout() {\r\n    localStorage.removeItem(\"user\");\r\n  }\r\n\r\n  getCurrentUser() {\r\n    return JSON.parse(localStorage.getItem('user'));\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default  new AuthService();","C:\\Users\\amine\\Desktop\\JAVAPROJECT\\forum\\src\\services\\auth-header.js",[],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":21,"column":19,"nodeType":"42","messageId":"43","endLine":21,"endColumn":29},{"ruleId":"44","severity":1,"message":"45","line":66,"column":18,"nodeType":"46","endLine":66,"endColumn":30},{"ruleId":"44","severity":1,"message":"45","line":67,"column":45,"nodeType":"46","endLine":67,"endColumn":57},{"ruleId":"40","severity":1,"message":"47","line":19,"column":9,"nodeType":"42","messageId":"43","endLine":19,"endColumn":13},{"ruleId":"48","severity":2,"message":"49","line":19,"column":53,"nodeType":"42","messageId":"50","endLine":19,"endColumn":61},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-unused-vars","'setMessage' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'resp' is assigned a value but never used.","no-undef","'password' is not defined.","undef","no-global-assign","no-unsafe-negation"]